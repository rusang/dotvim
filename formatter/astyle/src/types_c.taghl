syn keyword CTagsStructure switchVariables
syn keyword CTagsMember isInBeautifySQL isImmediatelyPostEmptyBlock isInClassHeaderTab haveLineContinuationChar isInHorstmannRunIn AS_CLASS attachClosingBracketMode isCharImmediatelyPostTemplate isInLineComment tabLength nonAssignmentOperators noTrimCommentContinuation AS_QUESTION_QUESTION shouldAlignMethodColon AS_GR isInQuote lineStartsInComment optionsFileName m_translation AS_DO preprocBlockEnd eolWindows
syn keyword CTagsMember AS_STATIC_CAST linesOut fileNameVector headers currentLineBeginsWithBracket AS_REMOVE shouldAttachNamespace AS_IF blockCommentNoIndent AS_BAR_DEFINE foundPreDefinitionHeader isInCommentStartLine _AS_EXCEPT isInPreprocessorBeautify blockIndent eventPreprocDepth isInPreprocessor classIndent AS_DEFAULT prevFinalLineSpaceIndentCount shouldAttachExternC m_lcid AS_GR_GR_GR_ASSIGN isFormattedOnly hasWildcard maxSemiPending AS_CONST isImmediatelyPostPreprocessor optionsVector m_langID
syn keyword CTagsMember isIndentModeOff isInLet parenDepth AS_SYNCHRONIZED AS_PROTECTED previousOperator nextLineSpacePadNum shouldForceTabIndentation endOfAsmReached parenIndentStack AS_LS_LS_ASSIGN AS_SEALED AS_MINUS_ASSIGN AS_BAR_IF checkForEmptyLine indentLength maxComma AS_LS_LS_LS_ASSIGN isSpecialChar isInIndentablePreproc maxParenPending isCharImmediatelyPostOperator isInObjCSelector fileType AS_BAR_ENDIF AS_COUT AS_NOT isImmediatelyPostNonInStmt AS_NS_DURING AS_INTERRUPT blockTabCount AS_PLUS
syn keyword CTagsMember isCharImmediatelyPostCloseBlock excludeHitsVector probationHeader quoteChar AS_MINUS AS_QFOREACH isInIndentableStruct AS_NOEXCEPT isImmediatelyPostHeader elseHeaderFollowsComments lineOpensWithComment useAscii peekStart prependEmptyLine AS_BIT_NOT isInClassHeader isIndentableProprocessorBlock AS_QFOREVER previousChar AS_PLUS_PLUS currentHeader AS_NS_HANDLER lastLineHeader AS_UNION formatterFileType isInExternC maxSemi objCColonPadMode AS_AND_ASSIGN bracketCount prevEOL
syn keyword CTagsMember bracketFormatMode shouldKeepLineUnbroken AS_AND AS_SCOPE_RESOLUTION ignoreExcludeErrors needHeaderOpeningBracket AS_BIT_XOR isElseHeaderIndent isInDeclareSection caseIndent isInPotentialCalculation isImmediatelyPostOperator isInEnum lineCommentNoBeautify isInCase waitingBeautifierStackLengthStack shouldReparseCurrentChar AS_DELEGATE caseHeaderFollowsComments isCharImmediatelyPostReturn AS_MS_ASM AS_WHILE horstmannIndentInStatement AS_EXTERN unindentNextLine
syn keyword CTagsMember AS_AUTORELEASEPOOL blockParenDepthStack preprocDefineIndent passedColon AS_LS_LS isCharImmediatelyPostLineComment isImmediatelyPostEmptyLine optionErrors prevFinalLineIndentCount shouldPadParensInside AS_VOLATILE eolLinux shouldBreakLineAtNextChar isInEnumTypeID AS_CATCH isInClass lineOpensWithLineComment currentLine parenStatementStack previousBracketType shouldAttachInline headerStack switchBracketCount isModeManuallySet maxInStatementIndent unindentDepth foundPreCommandHeader
syn keyword CTagsMember utf8_16 maxCommaPending AS_BIT_AND _AS_FINALLY isInQuoteContinuation isCharImmediatelyPostNonInStmt AS_FIXED maxCodeLength previousCommandChar localizer shouldBreakOneLineBlocks AS_OR_ASSIGN bypassBrowserOpen isInEventTable shouldAttachClass switchIndent isInClassInitializer indentString AS_MULT_ASSIGN isJavaStaticConstructor prevNonLegalCh squareBracketCount optionsFileRequired AS_DIV_ASSIGN eolMacOld AS_SWITCH shouldDeleteEmptyLines isImmediatelyPostPointerOrReference origSuffix
syn keyword CTagsMember foundNamespaceHeader checksumOut currentNonLegalCh isInDefineDefinition isFirstPreprocConditional shouldIndentCol1Comments AS_EQUAL AS_FOR maxWhiteSpace filesUnchanged spaceIndentCount tempStacks AS_FOREACH horstmannIndentChars inStatementIndentStack maxAndOr minConditionalOption shouldAddBrackets lineBeginsWithCloseBracket isInExecSQL lineEndsMixed AS_LS filesAreIdentical isInLineBreak AS_ELSE preCommandHeaders shouldUnindentComment AS_CERR formattingStyle isRecursive checksumIn
syn keyword CTagsMember lineIsCommentOnly leadingSpaces AS_ASM preBlockStatements AS_TRY AS_MOD isFormattingModeOff AS_LOCK isQuiet isCharImmediatelyPostComment lineBeginsWithOpenBracket isVerbose isPrependPostBlockEmptyLineRequested lineClosingBlocksNum isHeaderInMultiStatementLine AS_TEMPLATE isNonParenHeader isCharImmediatelyPostThrow inLineNumber filesFormatted foundQuestionMark AS_OR AS_CLOSE_BRACKET lineCommentNoIndent AS_LS_EQUAL tabIncrementIn AS_OVERRIDE shouldBreakClosingHeaderBrackets
syn keyword CTagsMember lineIsEmpty AS_SEMICOLON _AS_TRY activeBeautifierStackLengthStack indentableMacros lineOpeningBlocksNum previousLastLineHeader doesLineStartComment isInComment isInHeader AS_CIN AS_NOT_EQUAL fileOptionsVector readyFormattedLine baseFileType isSharpAccessor prevLineDeleted breakCurrentOneLineBlock AS_QUESTION AS_CLOSE_COMMENT AS_BAR_EL isCharImmediatelyPostPointerOrReference isNonInStatementArray sourceIterator AS_MULT foundCastOperator isInQuestion nonInStatementBracket
syn keyword CTagsMember backslashEndsPrevLine currentChar structStack AS_XOR_ASSIGN isImmediatelyPostObjCMethodDefinition shouldRemoveBrackets inStatementIndentStackSizeStack maxWhiteSpacePending buffer isPreviousCharPostComment lineNumber AS_ENUM isInObjCInterface isImmediatelyPostLineComment isInPreprocessorComment unindentCase AS_MINUS_MINUS indentableHeaders AS_PRIVATE shouldRemoveNextClosingBracket prevBuffer lookingForCaseBracket isSharpDelegate castOperators shouldBreakClosingHeaderBlocks
syn keyword CTagsMember nextLineIsEventIndent bracketBlockStateStack forceTab isInHorstmannComment AS_BAR_INCLUDE outputEOL isImmediatelyPostThrow activeBeautifierStack shouldIndentPreprocDefine AS_GET lineIsLineCommentOnly formatter isInConditional passedSemicolon prevNonSpaceCh isAppendPostBlockEmptyLineRequested AS_ARROW AS_CASE isIndentableProprocessor formattedLine isInAsmOneLine shouldPadParensOutside operators shouldPadHeader AS_GR_GR currentNonSpaceCh excludeVector previousNonWSChar AS_COMMA AS_ADD
syn keyword CTagsMember spaceIndentObjCMethodDefinition fileName colonIndentObjCMethodDefinition shouldPadOperators pointerAlignment blockStatementStack endOfCodeReached shouldPadMethodColon AS_UNSAFE isCaseHeaderCommentIndent isLineReady sw bracketTypeStack shouldBreakOneLineStatements shouldBreakBlocks templateDepth foundStructHeader shouldPadFirstParen AS_GR_GR_GR currentLineFirstBracketNum lineEndsInCommentOnly streamLength AS_THROWS shouldIndentPreprocConditional AS_COLON maxAndOrPending
syn keyword CTagsMember shouldConvertTabs parenStack AS_GR_EQUAL spacePadNum AS_CONST_CAST switchStack AS_WHERE charNum isDryRun foundPreCommandMacro shouldBreakElseIfs preserveDate beautifierFileType isCharImmediatelyPostOpenBlock m_subLangID referenceAlignment AS_SELECTOR AS_UNCHECKED shouldStripCommentPrefix AS_NAMESPACE shouldIndentPreprocBlock shouldAddOneLineBrackets waitingBeautifierStack isInStatement appendOpeningBracket preBracketHeaderStack targetFilename foundClassHeader AS_GCC_MIN_ASSIGN
syn keyword CTagsMember isInVerbatimQuote AS_RETURN AS_END previousLineProbationTab classInitializerIndents preprocBracketTypeStackSize lineEnd preprocIndentStack preDefinitionHeaders AS_LS_LS_LS AS_REINTERPRET_CAST formattedLineCommentNum verbatimDelimiter blockCommentNoBeautify AS_OPEN_COMMENT AS_ASSIGN useTabs AS_DYNAMIC_CAST isInObjCMethodDefinition noBackup minConditionalIndent isPreviousBracketBlockRelated AS__ASM__ nextLineIsDeclareIndent AS_BIT_OR AS_STRUCT bracketIndentVtk labelIndent m_localeName
syn keyword CTagsMember foundClosingHeader bracketIndent preprocBlockIndent isInDefine shouldUnindentLine nonParenHeaders AS_PLUS_ASSIGN AS_GCC_MAX_ASSIGN isImmediatelyPostTemplate isInSwitch mainDirectoryLength modifierIndent assignmentOperators isInTemplate isVirgin AS_MOD_ASSIGN isImmediatelyPostComment namespaceIndent shouldUnPadMethodPrefix maxParen AS_MS__ASM isImmediatelyPostReturn switchDepth AS_OPEN_BRACKET AS_DIV lineBeginsWithComma indentCount AS_LET shouldPadMethodPrefix targetDirectory
syn keyword CTagsMember AS_SET foundInterfaceHeader AS_NEW AS_STATIC shouldIndentBrackettedLine AS_OPERATOR AS_THROW AS_GR_GR_ASSIGN emptyLineFill previousReadyFormattedLineLength defineIndentCount AS_FINALLY AS_INTERFACE isInIndentablePreprocBlock enhancer processedFirstConditional questionMarkStack AS_FOREVER shouldBreakLineAfterLogical isImmediatelyPostCommentOnly shouldUnPadParens AS_OPEN_LINE_COMMENT AS_LAMBDA ignoreExcludeErrorsDisplay isInAsm AS_PUBLIC isInAsmBlock shouldCloseTemplates inStream
syn keyword CTagsGlobalVariable _CRT_glob
syn keyword CTagsConstant SUBLANG_CHINESE_MACAU LANG_HINDI
syn keyword CTagsEnumeratorName FormatStyle ReferenceAlign FileEncoding eState BracketMode FileType MinConditional LineEndFormat ObjCColonPad BracketType PointerAlign
syn keyword CTagsEnumerationValue UTF_32LE LINEEND_DEFAULT LINEEND_MACOLD eFinal COLON_PAD_BEFORE ePenultimate ATTACH_MODE ENCODING_8BIT
syn keyword CTagsEnumerationValue SURROGATE_TRAIL_LAST PTR_ALIGN_NAME NAMESPACE_TYPE STYLE_JAVA STYLE_NONE eSecondOf4Bytes ARRAY_NIS_TYPE COLON_PAD_ALL SURROGATE_TRAIL_FIRST COMMAND_TYPE MINCOND_ONEHALF SINGLE_LINE_TYPE NONE_MODE LINEEND_CR STYLE_LISP DEFINITION_TYPE LINEEND_LF REF_ALIGN_MIDDLE MINCOND_ONE INIT_TYPE STYLE_GOOGLE STYLE_VTK RUN_IN_MODE MINCOND_TWO CLASS_TYPE LINEEND_LINUX SURROGATE_LEAD_FIRST SURROGATE_LEAD_LAST STYLE_WHITESMITH UTF_32BE PTR_ALIGN_TYPE STYLE_LINUX UTF_16LE LINUX_MODE
syn keyword CTagsEnumerationValue STYLE_HORSTMANN LINEEND_WINDOWS PTR_ALIGN_NONE COLON_PAD_AFTER UTF_16BE MINCOND_END REF_ALIGN_TYPE STYLE_BANNER REF_ALIGN_NONE EXTERN_TYPE C_TYPE PTR_ALIGN_MIDDLE NULL_TYPE ARRAY_TYPE COLON_PAD_NO_CHANGE BREAK_MODE JAVA_TYPE REF_ALIGN_NAME STYLE_STROUSTRUP STYLE_KR SHARP_TYPE ENUM_TYPE STYLE_ALLMAN INTERFACE_TYPE eStart STROUSTRUP_MODE COLON_PAD_NONE LINEEND_CRLF REF_SAME_AS_PTR STYLE_1TBS STYLE_PICO MINCOND_ZERO STRUCT_TYPE SURROGATE_FIRST_VALUE STYLE_GNU
syn keyword CTagsFunction adjustIndentCountForBreakElseIfComments formatClosingBracket getFilesFormatted getNumberFormat setCaseIndent setTabIndentation formatOpeningBracket fileNameVectorIsEmpty isJavaStyle formatArrayBrackets isLegalNameChar formatCommentCloser
syn keyword CTagsFunction getLanguageID getFilesAreIdentical main setBracketIndentVtk findOperator preLineWS getForceTabIndentation setBracketFormatMode getBlockIndent getArgvOptions nextLine getFileName isBracketType isIndentablePreprocessorBlock convertToMultiByte rtrim isIndentedPreprocessor commentAndHeaderFollows parseCurrentLine buildHeaders buildIndentableHeaders initializeOutputEOL isPointerOrReferenceCentered peekNextChar isBeforeAnyLineEndComment appendCurrentChar
syn keyword CTagsFunction updateFormattedLineSplitPoints printHelp findKeyword getInStatementIndentComma setAttachInline Utf8LengthFromUtf16 setBreakElseIfsMode getModifierIndent processSwitchBlock checkIfTemplateOpener formatArrayRunIn addBracketsToStatement getOrigSuffix getCurrentDirectory printSeparatingLine getPreserveDate error indentLine getTabLength adjustComments setBreakAfterMode buildLanguageVectors isPointerOrReferenceVariable isDigit getIsRecursive clearObjCMethodDefinitionAlignment
syn keyword CTagsFunction isBeforeComment deleteContainer detectEncoding getFormatterFileType setClassIndent isCharPotentialHeader launchDefaultBrowser Java_AStyleInterface_AStyleGetVersion getIgnoreExcludeErrorsDisplay getChecksumOut setIndentCol1CommentsMode setParensHeaderPaddingMode processOptions getChecksumIn buildPreDefinitionHeaders printMsg setMaxCodeLength appendChar initNewLine isPathExclued getExcludeHitsVector setJavaStyle getInStatementIndentAssign setStripCommentPrefix
syn keyword CTagsFunction getFileOptionsVector setOperatorPaddingMode updateFormattedLineSplitPointsPointerOrReference isSharpStyle buildNonAssignmentOperators AStyleMain isOkToSplitFormattedLine setReferenceAlignment formatPointerOrReferenceCast initVectors updateExcludeVector getIsVerbose padObjCMethodColon buildCastOperators padOperators formatCinToCout resetEndOfStatement setIsFormattedOnly getBigEndian computeChecksumIn goForward setLineEndFormat setBreakClosingHeaderBlocksMode setAttachNamespace
syn keyword CTagsFunction popLastInStatementIndent setMethodPrefixUnPaddingMode setRemoveBracketsMode compareToInputBuffer setObjCColonPaddingMode formatQuoteBody sortOnName appendCharInsideComments isPreprocessorConditionalCplusplus setAttachExternC getIsDryRun getIsFormattedOnly buildOperators translate removeFile getIsQuiet getPreprocDefineIndent sortOnLength getStreamLength setLabelIndent formatFile setIsQuiet enhance printVerboseStats formatPointerOrReferenceToType isUniformInitializerBracket
syn keyword CTagsFunction buildPreBlockStatements tempMemoryAllocation setCStyle isPointerOrReference readFile appendSpacePad isSharpStyleWithParen isOption deleteBeautifierVectors unindentLine utf16len trim formatCommentOpener padParens setIsDryRun getWideTranslation setBreakClosingHeaderBracketsMode setPreprocBlockIndent isOperatorPaddingDisabled convertTabToSpaces convertUtf8ToUtf16 setPointerAlignment getModeManuallySet computePreprocessorIndent isInExponent getLineEndsMixed isCharPotentialOperator
syn keyword CTagsFunction formatLineCommentBody getTranslationVectorSize isBeforeMultipleLineEndComments formatPointerOrReferenceToName getPreviousWord sleep setPreprocDefineIndent pointerSymbolFollows saveLastInputLine Java_AStyleInterface_AStyleMain breakLine getIsLineReady javaErrorHandler findHeader getLineEndFormat peekNextLine peekNextText setMinConditionalIndentOption setOptionsFileName setSpaceIndentation isLineEndComment findNextChar getCaseIndent initContainer getOptionErrors
syn keyword CTagsFunction Utf16ToUtf8 setIsRecursive setDeleteEmptyLinesMode getOptionsVector formatUtf16 testForTimeToSplitFormattedLine isBeforeAnyComment Utf16LengthFromUtf8 getClassIndent checkForHeaderFollowingComment Utf8ToUtf16 tellg convertSpaceIndentToForceTab displayLastError removeBracketsFromStatement init isClosingHeader peekReset setBlockIndent getFileNameVector findCaseColon getFileType extractPreprocessorStatement computeObjCColonAlignment setOrigSuffix setIsVerbose getIndentString
syn keyword CTagsFunction importOptions isEmptyLine getTranslationClass setLanguageFromName isOptionError copyTempStacks writeFile isClassInitializer isNextCharOpeningBracket computePreliminaryIndentation setFormattingStyle getLineEndChange deleteTempStacksContainer buildNonParenHeaders setSingleStatementsMode isParamOption isUnaryOperator setAttachClosingBracketMode getSwitchIndent setOutputEOL wildcmp isCurrentBracketBroken setParensOutsidePaddingMode clearFormattedLineSplitPoints setCloseTemplatesMode
syn keyword CTagsFunction updateFormattedLineSplitPointsOperator buildPreCommandHeaders isOkToBreakBlock getChecksumDiff setAlignMethodColon isOneLineBlockReached appendSpaceAfter setAddBracketsMode setSharpStyle getBracketType isExecSQL getIgnoreExcludeErrors isInPreprocessorUnterminatedComment registerInStatementIndent setIgnoreExcludeErrorsAndDisplay getFileNames javaMemoryAlloc convertForceTabIndentToSpaces setTranslationClass setForceTabXIndentation parseOptions getBeautifierFileType AStyleMainUtf16
syn keyword CTagsFunction isStructAccessModified formatPointerOrReferenceToMiddle setBreakOneLineBlocksMode computeChecksumOut formatPointerOrReference isNextWordSharpNonParenHeader addPair deleteBeautifierContainer initTempStacksContainer adjustParsedLineIndentation isImmediatelyPostCast setBracketIndent standardizePath stripCommentPrefix processFiles buildIndentableMacros setParensUnPaddingMode appendSequence setNoBackup getOutputEOL isNonInStatementArrayBracket isBeginDeclareSectionSQL
syn keyword CTagsFunction setModeManuallySet buildAssignmentOperators getNextChar getIndentLength renameFile beautify getFollowingOperator setModifierIndent setParensFirstPaddingMode setDefaultTabLength setIgnoreExcludeErrors AStyleGetVersion setPreserveDate registerInStatementIndentColon trimContinuationLine isArrayOperator isWhiteSpace swap16bit isCStyle isLineBreakBeforeClosingHeader findFormattedLineSplitPoint formatCommentBody setMethodPrefixPaddingMode stringEndsWith getEmptyLineFill getParam
syn keyword CTagsFunction setParensInsidePaddingMode appendOperator formatRunIn isSequenceReached waitForRemove isEndDeclareSectionSQL setBypassBrowserOpen isDereferenceOrAddressOf convertLineEnds setMinConditionalIndentLength parseOption getFilePaths printVerboseHeader formatQuoteOpener settext getIndentedLineReturn getExcludeVector getCurrentWord fixOptionVariableConflicts getNoBackup setLanguageFromLCID isInSwitchStatement setNamespaceIndent indexOf getNextLine setEmptyLineFill getBracketIndent
syn keyword CTagsFunction correctMixedLineEnds isExternC getOptionsFileName formatLineCommentOpener setPreprocConditionalIndent setSwitchIndent getNextProgramCharDistance processPreprocessor setAddOneLineBracketsMode statementEndsWithComma hasMoreLines setMaxInStatementIndentLength convertUtf16ToUtf8 getNextLineCommentAdjustment getNextWord setAttachClass setTabSpaceConversionMode setBreakBlocksMode adjustChecksumIn setBreakBlocksVariables getNamespaceIndent getCurrentLineCommentAdjustment
syn keyword CTagsType fpAlloc utf16_t utf16 utf8 fpError ubyte
syn keyword CTagsDefinedName __USE_STD_IOSTREAM _ EXPORT STDCALL ASTYLE_H ASTYLE_LIB ASTYLE_MAIN_H ASLOCALIZER_H
syn keyword CTagsClass Hindi Polish Translation ASBeautifier ASLocalizer ASStreamIterator ChineseTraditional ASFormatter Italian ASResource Portuguese Utf8_16 ASLibrary ASEnhancer ChineseSimplified Spanish Russian ASConsole French ASSourceIterator Japanese ASBase Swedish English Korean Dutch Ukrainian German ASOptions Finnish
syn keyword CTagsNamespace astyle

" Matches for file ASResource.cpp:
if (has_key(b:TagHighlightPrivate, "NormalisedPath") && b:TagHighlightPrivate["NormalisedPath"] == "ASResource.cpp") || TagHighlight#Option#GetOption("IgnoreFileScope")
	syn keyword CTagsMember AS_OPEN_COMMENT _AS_EXCEPT AS_ASSIGN AS_VOLATILE AS_CATCH AS_SEMICOLON _AS_TRY AS_DEFAULT AS_CIN AS_NOT_EQUAL AS__ASM__ AS_GR_GR_GR_ASSIGN AS_BIT_OR AS_QUESTION AS_STRUCT AS_CLOSE_COMMENT AS_AND AS_BAR_EL AS_SCOPE_RESOLUTION AS_CONST AS_GR_EQUAL AS_BIT_XOR AS_MULT AS_CONST_CAST AS_WHERE AS_ASM AS_TRY AS_MOD AS_CLASS AS_LOCK AS_SELECTOR AS_UNCHECKED AS_NAMESPACE AS_DELEGATE AS_QUESTION_QUESTION AS_TEMPLATE AS_MS_ASM AS_GR AS_WHILE AS_EXTERN AS_DYNAMIC_CAST AS_OR
	syn keyword CTagsMember AS_ARROW AS_CASE AS_BIT_AND _AS_FINALLY AS_FIXED AS_MOD_ASSIGN AS_LS_LS_ASSIGN AS_SEALED AS_MS__ASM AS_MINUS_ASSIGN AS_BAR_IF AS_GR_GR AS_OR_ASSIGN AS_COMMA AS_ADD AS_LS_LS_LS_ASSIGN AS_OPEN_BRACKET AS_DIV AS_XOR_ASSIGN AS_LET AS_ENUM AS_MULT_ASSIGN AS_BAR_ENDIF AS_COUT AS_NOT AS_RETURN AS_NS_DURING AS_INTERRUPT AS_MINUS_MINUS AS_END AS_DIV_ASSIGN AS_PLUS AS_SWITCH AS_STATIC_CAST AS_REMOVE AS_PRIVATE AS_IF AS_AUTORELEASEPOOL AS_BAR_DEFINE AS_LS_LS_LS AS_REINTERPRET_CAST AS_LS_LS
	syn keyword CTagsMember AS_GCC_MIN_ASSIGN AS_CLOSE_BRACKET AS_SET AS_NEW AS_LS_EQUAL AS_MINUS AS_QFOREACH AS_OVERRIDE AS_STATIC AS_NOEXCEPT AS_OPERATOR AS_UNSAFE AS_THROW AS_GR_GR_ASSIGN AS_FINALLY AS_EQUAL AS_GR_GR_GR AS_INTERFACE AS_BIT_NOT AS_QFOREVER AS_FOR AS_FOREVER AS_THROWS AS_PLUS_PLUS AS_COLON AS_OPEN_LINE_COMMENT AS_NS_HANDLER AS_FOREACH AS_LAMBDA AS_UNION AS_BAR_INCLUDE AS_AND_ASSIGN AS_PUBLIC AS_GET AS_LS AS_ELSE AS_PLUS_ASSIGN AS_GCC_MAX_ASSIGN AS_CERR AS_SYNCHRONIZED AS_PROTECTED AS_DO
	syn keyword CTagsNamespace astyle
	
endif
" Matches for file astyle_main.cpp:
if (has_key(b:TagHighlightPrivate, "NormalisedPath") && b:TagHighlightPrivate["NormalisedPath"] == "astyle_main.cpp") || TagHighlight#Option#GetOption("IgnoreFileScope")
	syn keyword CTagsMember g_console g_version g_mid g_env g_obj g_isCaseSensitive g_fileSeparator _err
	syn keyword CTagsDefinedName UNICODE
	syn keyword CTagsNamespace astyle
	
endif
" Matches for file ASLocalizer.cpp:
if (has_key(b:TagHighlightPrivate, "NormalisedPath") && b:TagHighlightPrivate["NormalisedPath"] == "ASLocalizer.cpp") || TagHighlight#Option#GetOption("IgnoreFileScope")
	syn keyword CTagsStructure WinLangCode
	syn keyword CTagsMember wlc winLang canonicalLang
	syn keyword CTagsDefinedName __USE_STD_IOSTREAM
	syn keyword CTagsNamespace astyle
	
endif
" Matches for file ASBeautifier.cpp:
if (has_key(b:TagHighlightPrivate, "NormalisedPath") && b:TagHighlightPrivate["NormalisedPath"] == "ASBeautifier.cpp") || TagHighlight#Option#GetOption("IgnoreFileScope")
	syn keyword CTagsMember g_preprocessorCppExternCBracket
	syn keyword CTagsNamespace astyle
	
endif
" Matches for file ASEnhancer.cpp:
if (has_key(b:TagHighlightPrivate, "NormalisedPath") && b:TagHighlightPrivate["NormalisedPath"] == "ASEnhancer.cpp") || TagHighlight#Option#GetOption("IgnoreFileScope")
	syn keyword CTagsNamespace astyle
	
endif
" Matches for file ASFormatter.cpp:
if (has_key(b:TagHighlightPrivate, "NormalisedPath") && b:TagHighlightPrivate["NormalisedPath"] == "ASFormatter.cpp") || TagHighlight#Option#GetOption("IgnoreFileScope")
	syn keyword CTagsNamespace astyle
	
endif
